{"version":3,"sources":["components/Chart/ChartCard.js","components/Chart/ChartLegend.js","utils/demo/chartsData.js","pages/Charts.js","components/Typography/PageTitle.js"],"names":["Chart","children","title","className","ChartLegend","legends","map","legend","key","color","doughnutLegends","lineLegends","barLegends","doughnutOptions","data","datasets","backgroundColor","label","labels","options","responsive","cutoutPercentage","display","lineOptions","borderColor","fill","tooltips","mode","intersect","hover","scales","x","scaleLabel","labelString","y","barOptions","borderWidth","Charts","PageTitle"],"mappings":"mKAAA,oBAWeA,IATf,YAAqC,IAApBC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,MACzB,OACE,yBAAKC,UAAU,8DACb,uBAAGA,UAAU,uDAAuDD,GACnED,K,iCCNP,oBAeeG,IAbf,YAAmC,IAAZC,EAAW,EAAXA,QACrB,OACE,yBAAKF,UAAU,+EACZE,EAAQC,KAAI,SAACC,GAAD,OACX,yBAAKJ,UAAU,oBAAoBK,IAAKD,EAAOL,OAC7C,0BAAMC,UAAS,oCAA+BI,EAAOE,MAAtC,mBACf,8BAAOF,EAAOL,c,iCCRxB,4MAAO,IAAMQ,EAAkB,CAC7B,CAAER,MAAO,SAAUO,MAAO,eAC1B,CAAEP,MAAO,QAASO,MAAO,eACzB,CAAEP,MAAO,OAAQO,MAAO,kBAGbE,EAAc,CACzB,CAAET,MAAO,UAAWO,MAAO,eAC3B,CAAEP,MAAO,OAAQO,MAAO,kBAGbG,EAAa,CACxB,CAAEV,MAAO,QAASO,MAAO,eACzB,CAAEP,MAAO,OAAQO,MAAO,kBAGbI,EAAkB,CAC7BC,KAAM,CACJC,SAAU,CACR,CACED,KAAM,CAAC,GAAI,GAAI,IAKfE,gBAAiB,CAAC,UAAW,UAAW,WACxCC,MAAO,cAGXC,OAAQ,CAAC,QAAS,SAAU,SAE9BC,QAAS,CACPC,YAAY,EACZC,iBAAkB,IAEpBd,OAAQ,CACNe,SAAS,IAIAC,EAAc,CACzBT,KAAM,CACJI,OAAQ,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,QACjEH,SAAU,CACR,CACEE,MAAO,UAKPD,gBAAiB,UACjBQ,YAAa,UACbV,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC/BW,MAAM,GAER,CACER,MAAO,OACPQ,MAAM,EAKNT,gBAAiB,UACjBQ,YAAa,UACbV,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,OAIrCK,QAAS,CACPC,YAAY,EACZM,SAAU,CACRC,KAAM,QACNC,WAAW,GAEbC,MAAO,CACLF,KAAM,UACNC,WAAW,GAEbE,OAAQ,CACNC,EAAG,CACDT,SAAS,EACTU,WAAY,CACVV,SAAS,EACTW,YAAa,UAGjBC,EAAG,CACDZ,SAAS,EACTU,WAAY,CACVV,SAAS,EACTW,YAAa,YAKrB1B,OAAQ,CACNe,SAAS,IAIAa,EAAa,CACxBrB,KAAM,CACJI,OAAQ,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,QACjEH,SAAU,CACR,CACEE,MAAO,QACPD,gBAAiB,UAEjBoB,YAAa,EACbtB,KAAM,EAAE,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,KAEjC,CACEG,MAAO,OACPD,gBAAiB,UAEjBoB,YAAa,EACbtB,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,OAIrCK,QAAS,CACPC,YAAY,GAEdb,OAAQ,CACNe,SAAS,K,iCC5Hb,uEAwCee,UAzBf,WACE,OACE,oCACE,kBAAC,IAAD,eAEA,yBAAKlC,UAAU,kCACb,kBAAC,IAAD,CAAWD,MAAM,YACf,kBAAC,IAAaW,KACd,kBAAC,IAAD,CAAaR,QAASK,OAGxB,kBAAC,IAAD,CAAWR,MAAM,SACf,kBAAC,IAASqB,KACV,kBAAC,IAAD,CAAalB,QAASM,OAGxB,kBAAC,IAAD,CAAWT,MAAM,QACf,kBAAC,IAAQiC,KACT,kBAAC,IAAD,CAAa9B,QAASO,W,gCCjChC,oBAQe0B,IANf,YAAkC,IAAbrC,EAAY,EAAZA,SACnB,OACE,wBAAIE,UAAU,gEAAgEF","file":"static/js/14.c4f19536.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Chart({ children, title }) {\n  return (\n    <div className=\"min-w-0 p-4 bg-white rounded-lg shadow-xs dark:bg-gray-800\">\n      <p className=\"mb-4 font-semibold text-gray-800 dark:text-gray-300\">{title}</p>\n      {children}\n    </div>\n  )\n}\n\nexport default Chart\n","import React from 'react'\n\nfunction ChartLegend({ legends }) {\n  return (\n    <div className=\"flex justify-center mt-4 space-x-3 text-sm text-gray-600 dark:text-gray-400\">\n      {legends.map((legend) => (\n        <div className=\"flex items-center\" key={legend.title}>\n          <span className={`inline-block w-3 h-3 mr-1 ${legend.color} rounded-full`}></span>\n          <span>{legend.title}</span>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default ChartLegend\n","export const doughnutLegends = [\n  { title: 'Shirts', color: 'bg-blue-500' },\n  { title: 'Shoes', color: 'bg-teal-600' },\n  { title: 'Bags', color: 'bg-purple-600' },\n]\n\nexport const lineLegends = [\n  { title: 'Organic', color: 'bg-teal-600' },\n  { title: 'Paid', color: 'bg-purple-600' },\n]\n\nexport const barLegends = [\n  { title: 'Shoes', color: 'bg-teal-600' },\n  { title: 'Bags', color: 'bg-purple-600' },\n]\n\nexport const doughnutOptions = {\n  data: {\n    datasets: [\n      {\n        data: [33, 33, 33],\n        /**\n         * These colors come from Tailwind CSS palette\n         * https://tailwindcss.com/docs/customizing-colors/#default-color-palette\n         */\n        backgroundColor: ['#0694a2', '#1c64f2', '#7e3af2'],\n        label: 'Dataset 1',\n      },\n    ],\n    labels: ['Shoes', 'Shirts', 'Bags'],\n  },\n  options: {\n    responsive: true,\n    cutoutPercentage: 80,\n  },\n  legend: {\n    display: false,\n  },\n}\n\nexport const lineOptions = {\n  data: {\n    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n    datasets: [\n      {\n        label: 'Organic',\n        /**\n         * These colors come from Tailwind CSS palette\n         * https://tailwindcss.com/docs/customizing-colors/#default-color-palette\n         */\n        backgroundColor: '#0694a2',\n        borderColor: '#0694a2',\n        data: [43, 48, 40, 54, 67, 73, 70],\n        fill: false,\n      },\n      {\n        label: 'Paid',\n        fill: false,\n        /**\n         * These colors come from Tailwind CSS palette\n         * https://tailwindcss.com/docs/customizing-colors/#default-color-palette\n         */\n        backgroundColor: '#7e3af2',\n        borderColor: '#7e3af2',\n        data: [24, 50, 64, 74, 52, 51, 65],\n      },\n    ],\n  },\n  options: {\n    responsive: true,\n    tooltips: {\n      mode: 'index',\n      intersect: false,\n    },\n    hover: {\n      mode: 'nearest',\n      intersect: true,\n    },\n    scales: {\n      x: {\n        display: true,\n        scaleLabel: {\n          display: true,\n          labelString: 'Month',\n        },\n      },\n      y: {\n        display: true,\n        scaleLabel: {\n          display: true,\n          labelString: 'Value',\n        },\n      },\n    },\n  },\n  legend: {\n    display: false,\n  },\n}\n\nexport const barOptions = {\n  data: {\n    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n    datasets: [\n      {\n        label: 'Shoes',\n        backgroundColor: '#0694a2',\n        // borderColor: window.chartColors.red,\n        borderWidth: 1,\n        data: [-3, 14, 52, 74, 33, 90, 70],\n      },\n      {\n        label: 'Bags',\n        backgroundColor: '#7e3af2',\n        // borderColor: window.chartColors.blue,\n        borderWidth: 1,\n        data: [66, 33, 43, 12, 54, 62, 84],\n      },\n    ],\n  },\n  options: {\n    responsive: true,\n  },\n  legend: {\n    display: false,\n  },\n}\n","import React from 'react'\n\nimport ChartCard from '../components/Chart/ChartCard'\nimport { Doughnut, Line, Bar } from 'react-chartjs-2'\nimport ChartLegend from '../components/Chart/ChartLegend'\nimport PageTitle from '../components/Typography/PageTitle'\nimport {\n  doughnutOptions,\n  lineOptions,\n  barOptions,\n  doughnutLegends,\n  lineLegends,\n  barLegends,\n} from '../utils/demo/chartsData'\n\nfunction Charts() {\n  return (\n    <>\n      <PageTitle>Charts</PageTitle>\n\n      <div className=\"grid gap-6 mb-8 md:grid-cols-2\">\n        <ChartCard title=\"Doughnut\">\n          <Doughnut {...doughnutOptions} />\n          <ChartLegend legends={doughnutLegends} />\n        </ChartCard>\n\n        <ChartCard title=\"Lines\">\n          <Line {...lineOptions} />\n          <ChartLegend legends={lineLegends} />\n        </ChartCard>\n\n        <ChartCard title=\"Bars\">\n          <Bar {...barOptions} />\n          <ChartLegend legends={barLegends} />\n        </ChartCard>\n      </div>\n    </>\n  )\n}\n\nexport default Charts\n","import React from 'react'\n\nfunction PageTitle({ children }) {\n  return (\n    <h1 className=\"my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\n  )\n}\n\nexport default PageTitle\n"],"sourceRoot":""}